resources:
- repo: self
  fetchDepth: 1
queue:
  name: Hosted Ubuntu 1604
trigger:
- release/2.1
variables:
  TargetFramework: 'netcoreapp2.1'
  RestoreBuildProjects: 'samples/**/*.csproj'
  TestProjects: 'test/MusicStore.Test/*.csproj'
  BuildConfiguration: 'Release'
  DockerImageName: 'co-oortiz-internal/keras'
steps:
- task: CmdLine@1
  displayName: 'Lock image version in deployment.yaml'
  inputs:
    filename: /bin/bash
    arguments: '-c "awk ''{gsub(\"MUSICSTORE_IMAGE\", \"gcr.io/$(DockerImageName):$(Build.BuildId)\", $0); print}'' deployment.yaml > $(build.artifactstagingdirectory)/deployment.yaml"'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
- task: Docker@0
  displayName: 'Build image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'gcr-tutorial'
    imageName: '$(DockerImageName):$(Build.BuildId)'
- task: Docker@0
  displayName: 'Publish image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'gcr-tutorial'
    action: 'Push an image'
    imageName: '$(DockerImageName):$(Build.BuildId)'
- task: CmdLine@2
  inputs:
    script: |
      ls -ha
      date
      env

- task: DownloadSecureFile@1
  name: authkey
  displayName: 'Download Service Account Key'
  inputs:
    secureFile: 'GoogleServiceAccountKey.json'
    retryCount: '2'

- task: CmdLine@2
  displayName: 'Install Gcloud'
  inputs:
    script: |
      wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
      tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --quiet --usage-reporting=false --path-update=true
      PATH="google-cloud-sdk/bin:${PATH}"
      gcloud --quiet components update

- task: CmdLine@2
  displayName: 'Install GCloud'
  inputs:
    script: |
      gcloud auth activate-service-account --key-file $(authkey.secureFilePath)
      gcloud compute instances list --project $(DockerImageName)